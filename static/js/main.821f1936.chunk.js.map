{"version":3,"sources":["components/Tab.js","components/Tabs.js","components/TaskManager.js","components/GoogleMap.js","components/DashBoard.js","App.js","reportWebVitals.js","index.js"],"names":["Tab","onClick","props","label","this","activeTab","className","Component","Tabs","onClickTabItem","tab","setState","state","children","map","child","EventList","events","style","margin","width","event","time","description","TaskManager","useState","setEvents","newEventText","setNewEventText","onSubmit","preventDefault","newEvents","isComplete","console","log","addEvent","type","value","onChange","target","length","MapContainer","handleChange","address","handleSelect","geocodeByAddress","then","results","getLatLng","latLng","mapCenter","catch","error","showingInfoWindow","activeMarker","selectedPlace","lat","lng","id","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","suggestion","active","backgroundColor","cursor","google","initialCenter","center","position","GoogleApiWrapper","apiKey","DashBoard","textAlign","src","App","name","setName","styles","border","borderRadius","Canvas","canvas","React","createRef","ref","height","strokeWidth","strokeColor","current","eraseMode","undo","resetCanvas","role","newName","prompt","GoogleMap","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.821f1936.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Tab extends Component {\n  static propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  onClick = () => {\n    const { label, onClick } = this.props;\n    onClick(label);\n  }\n\n  render() {\n    const {\n      onClick,\n      props: {\n        activeTab,\n        label,\n      },\n    } = this;\n\n    let className = 'tab-list-item';\n\n    if (activeTab === label) {\n      className += ' tab-list-active';\n    }\n\n    return (\n      <li\n        className={className}\n        onClick={onClick}\n      >\n        {label}\n      </li>\n    );\n  }\n}\n\nexport default Tab;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tab from './Tab';\n\n\n\nclass Tabs extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Array).isRequired,\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: this.props.children[0].props.label,\n    };\n  }\n\n  onClickTabItem = (tab) => {\n    this.setState({ activeTab: tab });\n  }\n\n  render() {\n    const {\n      onClickTabItem,\n      props: {\n        children,\n      },\n      state: {\n        activeTab,\n      }\n    } = this;\n\n    return (\n      <div className=\"tabs\">\n        <ol className=\"tab-list\">\n          {children.map((child) => {\n            const { label } = child.props;\n\n            return (\n              <Tab\n                activeTab={activeTab}\n                key={label}\n                label={label}\n                onClick={onClickTabItem}\n              />\n            );\n          })}\n        </ol>\n        <div className=\"tab-content\">\n          {children.map((child) => {\n            if (child.props.label !== activeTab) return undefined;\n            return child.props.children;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;","import React, { useState } from \"react\";\n\nfunction TaskManager() {\n  const [events, setEvents] = useState([]);\n  const [newEventText, setNewEventText] = useState(\"(00:00) Event\");\n\n  function handleAddEvent(event) {\n    // React honours default browser behavior and the\n    // default behaviour for a form submission is to\n    // submit AND refresh the page. So we override the\n    // default behaviour here as we don't want to refresh\n    event.preventDefault();\n    addEvent(newEventText);\n  }\n\n  function addEvent(description) {\n    const newEvents = [\n      // the ... operator is called the spread operator\n      // what we are doing is creating a brand new array of\n      // tasks, that is different from the previous array\n      // See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax\n      ...events,\n      {\n        description: description,\n        isComplete: false\n      }\n    ];\n    setEvents(newEvents);\n    console.log(newEvents);\n  }\n\n  return (\n    <>\n      <div>\n        <h3>Add Events</h3>\n        <form onSubmit={handleAddEvent}>\n          <label>\n            Event:\n            <input\n              style={{ margin: \"0 1rem\" }}\n              type=\"text\"\n              value={newEventText}\n              // how do you know it's event.target.value? it just is.\n              // search it up on MDN, and view react code samples\n              // See: https://reactjs.org/docs/forms.html\n              onChange={(event) => setNewEventText(event.target.value)}\n            />\n          </label>\n          <input type=\"submit\" value=\"Add\" />\n        </form>\n      </div>\n\n      <div>\n        <h3>Event List</h3>\n        {events.length > 0 ? (\n          <EventList events={events} setEvents={setEvents} />\n        ) : (\n          <p>No Events yet! Please add Events.</p>\n        )}\n      </div>\n    </>\n  );\n}\n\nfunction EventList(props) {\n  const { events} = props;\n    // We set new tasks in such a complex way so that we maintain immutability\n    // Read this article to find out more:\n    // https://blog.logrocket.com/immutability-in-react-ebe55253a1cc/\n\n  return (\n    <table style={{ margin: \"-5 \", width: \"50%\" }}>\n      <thead>\n        <tr>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        {events.map((event, time) => (\n          // We should specify key here to help react identify\n          // what has updated\n          // https://reactjs.org/docs/lists-and-keys.html#keys\n          <tr key={event.description}>\n            <td>{event.description}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\nexport default TaskManager;","import React, { Component } from 'react';\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\n\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // for google map places autocomplete\n      address: '',\n\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n  \n      mapCenter: {\n        lat: 49.2827291,\n        lng: -123.1207375\n      }\n    };\n  }\n\n  handleChange = address => {\n    this.setState({ address });\n  };\n \n  handleSelect = address => {\n    this.setState({ address });\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => {\n        console.log('Success', latLng);\n\n        // update center state\n        this.setState({ mapCenter: latLng });\n      })\n      .catch(error => console.error('Error', error));\n  };\n \n  render() {\n    return (\n      <div id='googleMaps'>\n        <PlacesAutocomplete\n          value={this.state.address}\n          onChange={this.handleChange}\n          onSelect={this.handleSelect}\n        >\n          {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n            <div>\n              <input\n                {...getInputProps({\n                  placeholder: 'Search Places ...',\n                  className: 'location-search-input',\n                })}\n              />\n              <div className=\"autocomplete-dropdown-container\">\n                {loading && <div>Loading...</div>}\n                {suggestions.map(suggestion => {\n                  const className = suggestion.active\n                    ? 'suggestion-item--active'\n                    : 'suggestion-item';\n                  // inline style for demonstration purpose\n                  const style = suggestion.active\n                    ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                    : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                  return (\n                    <div\n                      {...getSuggestionItemProps(suggestion, {\n                        className,\n                        style,\n                      })}\n                    >\n                      <span>{suggestion.description}</span>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </PlacesAutocomplete>\n\n        <Map \n          google={this.props.google}\n          initialCenter={{\n            lat: this.state.mapCenter.lat,\n            lng: this.state.mapCenter.lng\n          }}\n          center={{\n            lat: this.state.mapCenter.lat,\n            lng: this.state.mapCenter.lng\n          }}\n        >\n          <Marker \n            position={{\n              lat: this.state.mapCenter.lat,\n              lng: this.state.mapCenter.lng\n            }} />\n        </Map>\n      </div>\n    )\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: ('AIzaSyAiC6rNM9TG8NcE1SQXTMgjS4poMoPliSo')\n})(MapContainer)","import \"./DashBoard.css\";\n\n\n\n\nfunction DashBoard() {\n\treturn (\n    <div>\n    <h2 style = {{textAlign: \"left\"}}>Team 1</h2>\n\t\t<div className=\"flip-card\">\n  <div className=\"flip-card-inner\">\n    <div className=\"flip-card-front\">\n      <img className= \"svg-big\" src=\"IMG_5085.JPG\"/>\n      <h1>Clement Kong</h1>\n      <p className=\"name\">3rd Sergeant</p>\n      <p className=\"title\">Firefighter 1, Team 1</p>\n      <p>Status: RED</p>\n    </div>\n    <div className=\"flip-card-back\">\n      <h1>Clement Kong</h1> \n      <p>Heart Rate: 123</p>\n      <p>Temperature: 37.0</p> \n      <p>Time in: 15:00</p>\n      <p>Time out: 15:40</p>     \n    </div>\n  </div>\n</div>\n\n\n<div className=\"flip-card\">\n  <div className=\"flip-card-inner\">\n    <div className=\"flip-card-front\">\n      <img className= \"svg-big\" src=\"IMG_5085.JPG\" />\n      <h1>Riley Kong</h1>\n      <p className=\"name\">3rd Sergeant</p>\n      <p className=\"title\">Firefighter 1, Team 1</p>\n      <p>Status : YELLOW</p>\n    </div>\n    <div className=\"flip-card-back\">\n      <h1>Riley Kong</h1> \n      <p>Heart Rate: 125</p>\n      <p>Temperature: 37.1</p> \n      <p>Time in: 15:00</p>\n      <p>Time out: 15:40</p> \n    </div>\n  </div>\n</div>\n\n\n<div className=\"flip-card\">\n  <div className=\"flip-card-inner\">\n    <div className=\"flip-card-front\">\n      <img className= \"svg-big\" src=\"IMG_5085.JPG\" />\n      <h1>Wilson Kong</h1>\n      <p className=\"name\">3rd Sergeant</p>\n      <p className=\"title\">Firefighter 1, Team 1</p>\n      <p>Status: YELLOW</p>\n    </div>\n    <div className=\"flip-card-back\">\n      <h1>Wilson Kong</h1> \n      <p>Heart Rate: 120</p>\n      <p>Temperature: 37.2</p> \n      <p>Time in: 15:00</p>\n      <p>Time out: 15:40</p> \n    </div>\n  </div>\n</div>\n\n\n<h2 style = {{textAlign: \"left\"}}>Team 2</h2>\n\n<div className=\"flip-card\">\n  <div className=\"flip-card-inner\">\n    <div className=\"flip-card-front\">\n      <img className= \"svg-big\" src=\"IMG_5085.JPG\" />\n      <h1>Jessica Kong</h1>\n      <p className=\"name\">3rd Sergeant</p>\n      <p className=\"title\">Firefighter 1, Team 1</p>\n      <p>Status: YELLOW</p>\n    </div>\n    <div className=\"flip-card-back\">\n      <h1>Jessica Kong</h1> \n      <p>Heart Rate: 123</p>\n      <p>Temperature: 37.0</p> \n      <p>Time in: 15:00</p>\n      <p>Time out: 15:40</p> \n    </div>\n  </div>\n</div>\n\n\n<div className=\"flip-card\">\n  <div className=\"flip-card-inner\">\n    <div className=\"flip-card-front\">\n      <img className= \"svg-big\" src=\"IMG_5085.JPG\" />\n      <h1>Jaime Lim</h1>\n      <p className=\"name\">3rd Sergeant</p>\n      <p className=\"title\">Firefighter 1, Team 1</p>\n      <p>Status: YELLOW</p>\n    </div>\n    <div className=\"flip-card-back\">\n      <h1>Jaime Lim</h1> \n      <p>Heart Rate: 115</p>\n      <p>Temperature: 37.2</p> \n      <p>Time in: 15:00</p>\n      <p>Time out: 15:40</p> \n    </div>\n  </div>\n</div>\n\n\n<div className=\"flip-card\">\n  <div className=\"flip-card-inner\">\n    <div className=\"flip-card-front\">\n      <img className= \"svg-big\" src=\"IMG_5085.JPG\" />\n      <h1>Jasmine Lee</h1>\n      <p className=\"name\">3rd Sergeant</p>\n      <p className=\"title\">Firefighter 1, Team 1</p>\n      <p>Status: YELLOW</p>\n    </div>\n    <div className=\"flip-card-back\">\n      <h1>Jasmine Lee</h1> \n      <p>Heart Rate: 122</p>\n      <p>Temperature: 37.1</p> \n      <p>Time in: 15:00</p>\n      <p>Time out: 15:40</p> \n    </div>\n  </div>\n</div>\n\n</div>\n )\n}\n\nexport default DashBoard;","import React from 'react';\nimport Tabs from \"./components/Tabs\"; \nimport \"./App.css\";\nimport { useState } from \"react\";\nimport TaskManager from \"./components/TaskManager\";\nimport { ReactSketchCanvas } from \"react-sketch-canvas\";\nimport GoogleMap from \"./components/GoogleMap\";\nimport DashBoard from \"./components/DashBoard\";\n\n\nfunction App() {\n\n  const [name, setName] = useState(\"SGT __\");\n\n  const styles = {\n  border: \"0.0625rem solid #9c9c9c\",\n  borderRadius: \"0.10rem\"};\n\n\n  const Canvas = class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvas = React.createRef();\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactSketchCanvas\n          ref={this.canvas}\n          style={styles}\n          width= {600}\n          height= {600}\n          strokeWidth={4}\n          strokeColor=\"black\"\n        />\n\n        <button\n          onClick={() => {\n            this.canvas.current.eraseMode(true)\n          }}\n        >\n          Erase\n        </button>\n\n        <button\n          onClick={() => {\n            this.canvas.current.eraseMode(false)\n          }}\n        >\n          Pen\n        </button>\n\n        <button\n          onClick={() => {\n            this.canvas.current.undo()\n          }}\n        >\n          Undo\n        </button>\n\n        <button\n          onClick={() => {\n            this.canvas.current.resetCanvas()\n          }}\n        >\n          Reset\n        </button>\n\n      </div>\n    );\n  }\n};\n\n  return (\n    <div>\n          <h1>smartBACO</h1>\n      <p>\n        Welcome,{\" \"}\n        <strong\n          role=\"button\"\n          onClick={() => {\n            const newName = prompt(\"What is your name?\", name);\n            setName(newName);\n          }}\n        >\n          <button>{name || \"<set a name>\"}</button>\n        </strong>\n        !\n      </p>\n\n     <Tabs> \n       <div label=\"FireFighers\"> \n         <DashBoard />\n       </div> \n\n\n       <div label=\"Map\"> \n         <GoogleMap />\n       </div> \n\n\n       <div label=\"Events & Planning\"> \n         <TaskManager />\n\n         <h3> Sketch </h3>\n         <Canvas />\n       </div> \n     </Tabs> \n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}